/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { Errors } from "./Errors";
import type { Post } from "./Post";

export type PostsQueryParams = {
    /**
     * @description Relationship paths to include in the response
     * @pattern ^()(,())*$
     * @type string | undefined
    */
    include?: string;
    /**
     * @description Limits the response fields to only those listed for each type
     * @type object | undefined
    */
    fields?: {
        /**
         * @description Comma separated field names for post
         * @type string | undefined
        */
        post?: string;
        [key: string]: any;
    };
};

/**
 * @description Success
*/
export type Posts201 = {
    /**
     * @description A \"Resource object\" representing a post
     * @type object | undefined
    */
    data?: Post;
    /**
     * @type array | undefined
    */
    included?: any[];
    /**
     * @type object | undefined
    */
    meta?: {
        [key: string]: any;
    };
};

/**
 * @description General Error
*/
export type PostsError = Errors;

export const dataTypeEnum = {
    "post": "post"
} as const;

export type DataTypeEnumKey = (typeof dataTypeEnum)[keyof typeof dataTypeEnum];

/**
 * @description Request body for the /posts operation on post resource
*/
export type PostsMutationRequest = {
    /**
     * @type object
    */
    data: {
        /**
         * @type object | undefined
        */
        attributes?: {
            /**
             * @type string, uuid
            */
            author_id: string;
            /**
             * @type string
            */
            content: string;
            /**
             * @type string
            */
            title: string;
        };
        /**
         * @type object | undefined
        */
        relationships?: object;
        type?: DataTypeEnumKey;
    };
};

export type PostsMutationResponse = Posts201;

export type PostPostsMutation = {
    Response: Posts201;
    Request: PostsMutationRequest;
    QueryParams: PostsQueryParams;
    Errors: any;
};