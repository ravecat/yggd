/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { Errors } from "./Errors";
import type { Token } from "./Token";
import type { TokenFilter } from "./TokenFilter";

export type GetTokensQueryParams = {
    /**
     * @description Filters the query to results matching the given filter object
     * @type deepObject | undefined
    */
    filter?: TokenFilter;
    /**
     * @description Sort order to apply to the results
     * @pattern ^(jti|-jti|\+\+jti|--jti|subject|-subject|\+\+subject|--subject|expires_at|-expires_at|\+\+expires_at|--expires_at|purpose|-purpose|\+\+purpose|--purpose|extra_data|-extra_data|\+\+extra_data|--extra_data)(,(jti|-jti|\+\+jti|--jti|subject|-subject|\+\+subject|--subject|expires_at|-expires_at|\+\+expires_at|--expires_at|purpose|-purpose|\+\+purpose|--purpose|extra_data|-extra_data|\+\+extra_data|--extra_data))*$
     * @type string | undefined
    */
    sort?: string;
    /**
     * @description Paginates the response with the limit and offset or keyset pagination.
     * @type object | undefined
    */
    page?: {
        /**
         * @type string | undefined
        */
        after?: string;
        /**
         * @type string | undefined
        */
        before?: string;
        /**
         * @default false
         * @type boolean | undefined
        */
        count?: boolean;
        /**
         * @minLength 1
         * @type integer | undefined
        */
        limit?: number;
        /**
         * @minLength 0
         * @type integer | undefined
        */
        offset?: number;
    };
    /**
     * @description Relationship paths to include in the response
     * @pattern ^()(,())*$
     * @type string | undefined
    */
    include?: string;
    /**
     * @description Limits the response fields to only those listed for each type
     * @type object | undefined
    */
    fields?: {
        /**
         * @description Comma separated field names for token
         * @type string | undefined
        */
        token?: string;
        [key: string]: any;
    };
};

/**
 * @description Success
*/
export type GetTokens200 = {
    /**
     * @description An array of resource objects representing a token
     * @type array | undefined
    */
    data?: Token[];
    /**
     * @type array | undefined
    */
    included?: any[];
    /**
     * @type object | undefined
    */
    meta?: {
        [key: string]: any;
    };
};

/**
 * @description General Error
*/
export type GetTokensError = Errors;

export type GetTokensQueryResponse = GetTokens200;

export type GetTokensQuery = {
    Response: GetTokens200;
    QueryParams: GetTokensQueryParams;
    Errors: any;
};